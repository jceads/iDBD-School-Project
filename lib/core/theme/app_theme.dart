import 'package:flutter/material.dart';

class AppTheme {
  final ThemeData myTheme = ThemeData(
    brightness: Brightness.light,
    primaryColor: const Color(0xffe3d883),
    primaryColorLight: const Color(0xfff6f2d5),
    primaryColorDark: const Color(0xff7d721c),
    canvasColor: const Color(0xfffafafa),
    scaffoldBackgroundColor: const Color(0xff05595B),
    bottomAppBarColor: const Color(0xffffffff),
    cardColor: const Color(0xffe3d883),
    dividerColor: const Color(0xffF5F5F5),
    highlightColor: const Color(0x66bcbcbc),
    splashColor: const Color(0x66c8c8c8),
    selectedRowColor: const Color(0xfff5f5f5),
    unselectedWidgetColor: const Color(0x8a000000),
    disabledColor: const Color(0x61000000),
    toggleableActiveColor: const Color(0xffa69826),
    secondaryHeaderColor: const Color(0xfffaf8ea),
    backgroundColor: const Color(0xffece5ac),
    dialogBackgroundColor: const Color(0xffffffff),
    indicatorColor: const Color(0xffd0be2f),
    hintColor: const Color(0x8a000000),
    errorColor: const Color(0xffd32f2f),
    buttonTheme: const ButtonThemeData(
      textTheme: ButtonTextTheme.normal,
      minWidth: 88,
      height: 36,
      padding: EdgeInsets.only(top: 0, bottom: 0, left: 32, right: 32),
      shape: StadiumBorder(
          side: BorderSide(
        color: Color(0xff000000),
        width: 0,
        style: BorderStyle.none,
      )),
      alignedDropdown: false,
      buttonColor: Color(0xffe1d887),
      disabledColor: Color(0xffe0ebc0),
      highlightColor: Color(0x29000000),
      splashColor: Color(0x1f000000),
      focusColor: Color(0x1f000000),
      hoverColor: Color(0x0a000000),
      colorScheme: ColorScheme(
        primary: Color(0xffe3d883),
        secondary: Color(0xffd0be2f),
        surface: Color(0xffffffff),
        background: Color(0xffece5ac),
        error: Color(0xffd32f2f),
        onPrimary: Color(0xff000000),
        onSecondary: Color(0xff000000),
        onSurface: Color(0xff000000),
        onBackground: Color(0xff000000),
        onError: Color(0xffffffff),
        brightness: Brightness.light,
      ),
    ),
    textTheme: const TextTheme(
      // display4: TextStyle(
      //   color: Color(0xff172017),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // display3: const TextStyle(
      //   color: const Color(0xff172036),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // display2: const TextStyle(
      //   color: const Color(0xff24201f),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // display1: const TextStyle(
      //   color: Color(0xff1e1e17),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // head: const TextStyle(
      //   color: const Color(0xff433f26),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // title: const TextStyle(
      //   color: Color(0xff444425),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // subhead: const TextStyle(
      //   color: const Color(0xff000000),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      bodyText2: const TextStyle(
        color: const Color(0xff1e201e),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      bodyText1: const TextStyle(
        color: const Color(0xff201b21),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      caption: TextStyle(
        color: Color(0xff172017),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      button: TextStyle(
        color: Color(0xff45432a),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      subtitle1: TextStyle(
        color: const Color(0xff1d1b17),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      overline: TextStyle(
        color: Color(0xff22241e),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
    ),
    primaryTextTheme: const TextTheme(
      // display4: TextStyle(
      //   color: Color(0x8a000000),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // display3: TextStyle(
      //   color: Color(0x8a000000),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // display2: TextStyle(
      //   color: Color(0x8a000000),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // display1: TextStyle(
      //   color: Color(0x8a000000),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // head: TextStyle(
      //   color: const Color(0xdd000000),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      // title: TextStyle(
      //   color: const Color(0xdd000000),
      //   fontSize: null,
      //   fontWeight: FontWeight.w400,
      //   fontStyle: FontStyle.normal,
      // ),
      subtitle2: TextStyle(
        color: Color(0xdd000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      bodyText2: TextStyle(
        color: const Color(0xdd000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      bodyText1: TextStyle(
        color: Color(0xdd000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      caption: TextStyle(
        color: Color(0x8a000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      button: TextStyle(
        color: Color(0xdd000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      subtitle1: TextStyle(
        color: const Color(0xff000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      overline: TextStyle(
        color: Color(0xff000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
    ),
    inputDecorationTheme: const InputDecorationTheme(
      labelStyle: const TextStyle(
        color: Color(0xffe3d883),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      helperStyle: TextStyle(
        color: Color(0xffe3d883),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      hintStyle: TextStyle(
        color: Color(0xffe3d883),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      errorStyle: TextStyle(
        color: Color(0xffe3d883),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      errorMaxLines: null,
      isDense: false,
      contentPadding: EdgeInsets.only(top: 24, bottom: 16, left: 12, right: 12),
      isCollapsed: false,
      prefixStyle: TextStyle(
        color: Color(0xff201b21),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      suffixStyle: TextStyle(
        color: Color(0xff201b21),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      counterStyle: TextStyle(
        color: Color(0xff201b21),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      filled: false,
      fillColor: Color(0xffe4e3cf),
      floatingLabelBehavior: FloatingLabelBehavior.never,
      errorBorder: OutlineInputBorder(
          borderSide: BorderSide(
            color: Color(0xff000000),
            width: 1,
            style: BorderStyle.solid,
          ),
          borderRadius: BorderRadius.all(Radius.circular(4.0)),
          gapPadding: 4),
      focusedBorder: OutlineInputBorder(
          borderSide: BorderSide(
            color: Color(0xff000000),
            width: 1,
            style: BorderStyle.solid,
          ),
          borderRadius: BorderRadius.all(Radius.circular(4.0)),
          gapPadding: 4),
      focusedErrorBorder: OutlineInputBorder(
          borderSide: BorderSide(
            color: Color(0xff000000),
            width: 1,
            style: BorderStyle.solid,
          ),
          borderRadius: BorderRadius.all(Radius.circular(4.0)),
          gapPadding: 4),
      disabledBorder: OutlineInputBorder(
          borderSide: BorderSide(
            color: Color(0xff000000),
            width: 1,
            style: BorderStyle.solid,
          ),
          borderRadius: BorderRadius.all(Radius.circular(4.0)),
          gapPadding: 4),
      enabledBorder: OutlineInputBorder(
          borderSide: BorderSide(
            color: Color(0xff000000),
            width: 1,
            style: BorderStyle.solid,
          ),
          borderRadius: BorderRadius.all(Radius.circular(4.0)),
          gapPadding: 4),
      border: OutlineInputBorder(
          borderSide: BorderSide(
            color: Color(0xff000000),
            width: 1,
            style: BorderStyle.solid,
          ),
          borderRadius: BorderRadius.all(Radius.circular(4.0)),
          gapPadding: 4),
    ),
    iconTheme: const IconThemeData(
      color: Color(0xff000000),
      opacity: 1,
      size: 24,
    ),
    primaryIconTheme: const IconThemeData(
      color: Color(0xff43331c),
      opacity: 1,
      size: 24,
    ),
    sliderTheme: const SliderThemeData(
      activeTrackColor: null,
      inactiveTrackColor: null,
      disabledActiveTrackColor: null,
      disabledInactiveTrackColor: null,
      activeTickMarkColor: null,
      inactiveTickMarkColor: null,
      disabledActiveTickMarkColor: null,
      disabledInactiveTickMarkColor: null,
      thumbColor: null,
      disabledThumbColor: null,
      overlayColor: null,
      valueIndicatorColor: null,
      showValueIndicator: null,
      valueIndicatorTextStyle: TextStyle(
        color: Color(0xdd000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
    ),
    tabBarTheme: const TabBarTheme(
      indicatorSize: TabBarIndicatorSize.tab,
      labelColor: Color(0xdd000000),
      unselectedLabelColor: Color(0xb2000000),
    ),
    chipTheme: const ChipThemeData(
      backgroundColor: Color(0x1f000000),
      brightness: Brightness.light,
      deleteIconColor: Color(0xde000000),
      disabledColor: Color(0x0c000000),
      labelPadding: EdgeInsets.only(top: 0, bottom: 0, left: 8, right: 8),
      labelStyle: TextStyle(
        color: Color(0xde000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      padding: EdgeInsets.only(top: 4, bottom: 4, left: 4, right: 4),
      secondaryLabelStyle: TextStyle(
        color: Color(0x3d000000),
        fontSize: null,
        fontWeight: FontWeight.w400,
        fontStyle: FontStyle.normal,
      ),
      secondarySelectedColor: Color(0x3de3d883),
      selectedColor: Color(0x3d000000),
      shape: StadiumBorder(
          side: BorderSide(
        color: Color(0xff000000),
        width: 0,
        style: BorderStyle.none,
      )),
    ),
    dialogTheme: const DialogTheme(
        shape: RoundedRectangleBorder(
      side: BorderSide(
        color: Color(0xff000000),
        width: 0,
        style: BorderStyle.none,
      ),
      borderRadius: BorderRadius.all(Radius.circular(0.0)),
    )),
    colorScheme: ColorScheme.fromSwatch(
        primarySwatch: const MaterialColor(4293122179, {
      50: Color(0xfffaf8ea),
      100: Color(0xfff6f2d5),
      200: Color(0xffece5ac),
      300: Color(0xffe3d882),
      400: Color(0xffd9cb59),
      500: Color(0xffd0be2f),
      600: Color(0xffa69826),
      700: Color(0xff7d721c),
      800: Color(0xff534c13),
      900: Color(0xff2a2609)
    })).copyWith(secondary: const Color(0xffd0be2f)),
    textSelectionTheme: const TextSelectionThemeData(
      cursorColor: Color(0xff4285f4),
      selectionColor: Color(0xffcbb02d),
      selectionHandleColor: Color(0xffe3d882),
    ),
  );
}
